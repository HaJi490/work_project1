package edu.pnu.config;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.security.web.SecurityFilterChain;

@Configuration
public class SecurityConfig {
	@Bean
	PasswordEncoder passwordEncoder() {
		return new BCryptPasswordEncoder();
	}
	
	@Bean
	SecurityFilterChain securityFilterChain(HttpSecurity http) throws Exception{	// SecurityFilterChain을 등록하면 로그인을 강제하지 않는다
		http.csrf(csrf->csrf.disable());
		/// 권한설정
		http.authorizeHttpRequests(auth->auth
				.requestMatchers("/api/public/**").permitAll()
				.anyRequest().authenticated());
		
		http.formLogin(frmLogin->frmLogin.loginPage("/login")			// 로그인에 사용할 화면
										.defaultSuccessUrl("/", true));	// 로그인 성공후 이동할 url(about페이지)
		/// 접근 권한 없음 페이지 처리
		http.exceptionHandling(ex->ex.accessDeniedPage("/login"));
		/// (추가) 세션유지 하지않겠다
		
		/// 로그아웃 처리
		http.logout(logout -> logout.invalidateHttpSession(true)		// 세션 강제종료
									.deleteCookies("JSESSIONID")		// 세션 아이디가 저장된 쿠키삭제
									.logoutSuccessUrl("/login"));		// 로그아웃 후 이동할 url
		
		return http.build();
		
	}
}
